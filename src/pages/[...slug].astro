---
import { getBricks, reactBricksAstroStore } from 'react-bricks/astro'
import PageViewer from 'react-bricks/astro/PageViewer.astro'
import { cleanPage, fetchPage, fetchPages } from 'react-bricks/astro/server'
import BaseLayout from '../layouts/BaseLayout.astro'
import { createSlug, parseSlug } from '../util/i18n'

const config = reactBricksAstroStore.getConfig()

export async function getStaticPaths() {
  const config = reactBricksAstroStore.getConfig()

  const allPages = await fetchPages(config.apiKey, {
    type: 'page',
  })

  const pages = allPages.flatMap((page) => {
    return page.translations.map((translation) => ({
      params: {
        slug: createSlug(translation.language, translation.slug),
      },
    }))
  })

  return pages
}

const { slug } = Astro.params
const { cleanSlug, lang } = parseSlug(slug)

const page = await fetchPage({
  slug: cleanSlug,
  language: lang,
  config,
})

// Clean the received content
// Removes unknown or not allowed bricks
const bricks = getBricks()
const pageOk = page ? cleanPage(page, config.pageTypes || [], bricks) : null

if (!pageOk) {
  return new Response('Not Found', { status: 404 })
}
---

<BaseLayout lang={lang}>
  <Fragment slot="head">
    <title>{pageOk?.meta.title || ''}</title>
    <meta
      name="description"
      content={pageOk?.meta.description || pageOk?.meta.title || ''}
    />
  </Fragment>

  <PageViewer page={pageOk} main />
</BaseLayout>
